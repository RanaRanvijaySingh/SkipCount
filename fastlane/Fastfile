
default_platform(:android)

platform :android do

GRADLE_PATH = '../app/build.gradle'
COMMIT_FILE_PATH = '/Users/rana.singh/StudioProjects/SkipCount/fastlane/fastlaneCommit.txt'

#Regular expression to read version Code
REGX_VERSION_CODE = /versionCode\s+(\d+)/

#Regular expression to read version Name
REGX_VERSION_NAME = /versionName\s+"(\S+)"/

  desc "Start beta deployment"
  lane :beta do
    #Execute lane to increment build code and name
    incrementBuild

    #Execute lane to clear the build
    cleanBuild

    #Execute lane to generate signed apk
    createReleaseBuild

    #Execute lane to deploy build on beta
    betaDeploy

    #Execute lane to make a git commit
    gitCommit

    #Execute lane to make a git tag
    gitTag
  end

  desc "Run clean command"
  lane :cleanBuild do
    gradle(task: "clean")
  end

  desc "Create release build"
  lane :createReleaseBuild do
    gradle(
        task: 'assemble',
        build_type: 'Release'
        )
    #or gradle(task: "assembleRelease")
  end

  desc "Push build on beta"
  lane :betaDeploy do
    upload_to_play_store(track: 'beta')
  end

  desc "Increment build code and name"
  lane :incrementBuild do
    #Execute lane to increment build code
    incrementBuildCode

    #Execute lane to increment build name
    incrementBuildName
  end

  desc "Increment build code"
  lane :incrementBuildCode do
    #Open the gradle file and read version code and increment by one
    s = File.read(GRADLE_PATH)
    versionCode = s[REGX_VERSION_CODE, 1].to_i
    s[REGX_VERSION_CODE, 1] = (versionCode + 1).to_s

    #Rewrite bulid.gradle file
    rewriteGradleFile(s)
  end

  def rewriteGradleFile(s)
      #Re-write
      f = File.new(GRADLE_PATH, 'w')
      f.write(s)
      f.close
  end

  desc "Increment build name"
  lane :incrementBuildName do
    #Open the gradle file and read version code and increment by one
    s = File.read(GRADLE_PATH)
    versionCode = s[REGX_VERSION_CODE, 1].to_i
    s[REGX_VERSION_NAME, 1] = versionCode.to_s

    #Rewrite bulid.gradle file
    rewriteGradleFile(s)
  end

  desc "Make new commit"
  lane :gitCommit do
    #Command to add changes
    git_add

    #Command to add commit message
    git_commit( message: "Version bump")
  end

  desc "Create new tag"
  lane :gitTag do
    #Open the gradle file and read version code and increment by one
    s = File.read(GRADLE_PATH)
    versionCode = s[REGX_VERSION_CODE, 1].to_i

    tag = "v" + versionCode.to_s

    #Command to add new tag
    add_git_tag(tag: tag)

    #Command to push tags
    push_git_tags
  end
end
